{"ast":null,"code":"import GOBALS from '../GOBALS';\nexport default class UserModel {\n  constructor() {}\n\n  async getLogin(data) {\n    return fetch(GOBALS.URL + 'user/getLogin', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(responseJson => {\n      return responseJson.data[0];\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  async getUserBy() {\n    return fetch(GOBALS.URL + 'user/getUserBy', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({})\n    }).then(response => response.json()).then(responseJson => {\n      return responseJson;\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  async getUserByUserCode(data) {\n    return fetch(GOBALS.URL + 'user/getUserByUserCode', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(responseJson => {\n      return responseJson;\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  async insertUser(data) {\n    return fetch(GOBALS.URL + 'user/insertUser', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(responseJson => {\n      return responseJson;\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  async updateUserByUserCode(data) {\n    return fetch(GOBALS.URL + 'user/updateUserByUserCode', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(responseJson => {\n      return responseJson;\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  async deleteUserBycode(code) {\n    return fetch(GOBALS.URL + 'user/deleteUserByUserCode', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user_code: code\n      })\n    }).then(response => response.json()).then(responseJson => {\n      //console.log(\"data\", responseJson);\n      return responseJson;\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/s044/Documents/revel-market-backend/src/models/UserModel.js"],"names":["GOBALS","UserModel","constructor","getLogin","data","fetch","URL","method","headers","body","JSON","stringify","then","response","json","responseJson","catch","error","console","getUserBy","getUserByUserCode","insertUser","updateUserByUserCode","deleteUserBycode","code","user_code"],"mappings":"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","sourcesContent":["import GOBALS from '../GOBALS';\r\nexport default class UserModel {\r\n\r\n    constructor() {\r\n    }\r\n    async getLogin(data) {\r\n        return fetch(GOBALS.URL + 'user/getLogin', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((response) => response.json())\r\n            .then((responseJson) => {\r\n                return responseJson.data[0];\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n    async getUserBy() {\r\n        return fetch(GOBALS.URL + 'user/getUserBy', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n            })\r\n        }).then((response) => response.json())\r\n            .then((responseJson) => {\r\n                return responseJson;\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n    async getUserByUserCode(data) {\r\n        return fetch(GOBALS.URL + 'user/getUserByUserCode', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((response) => response.json())\r\n            .then((responseJson) => {\r\n                return responseJson;\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n    async insertUser(data) {\r\n        return fetch(GOBALS.URL + 'user/insertUser', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((response) => response.json())\r\n            .then((responseJson) => {\r\n                return responseJson;\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    async updateUserByUserCode(data) {\r\n        return fetch(GOBALS.URL + 'user/updateUserByUserCode', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((response) => response.json())\r\n            .then((responseJson) => {\r\n                return responseJson;\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n    async deleteUserBycode(code) {\r\n        return fetch(GOBALS.URL + 'user/deleteUserByUserCode', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                user_code: code\r\n            })\r\n        }).then((response) => response.json())\r\n            .then((responseJson) => {\r\n                //console.log(\"data\", responseJson);\r\n                return responseJson;\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}