{"ast":null,"code":"import GOBALS from '../GOBALS';\nexport default class ShopModel {\n  constructor() {}\n\n  async getNewsBy(data) {\n    return fetch(GOBALS.URL + 'news/getNewsBy', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(responseJson => {\n      return responseJson;\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  async getNewsShowBy(data) {\n    return fetch(GOBALS.URL + 'news/getNewsShowBy', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(responseJson => {\n      return responseJson;\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  async getNewsByNewsCode(data) {\n    return fetch(GOBALS.URL + 'news/getNewsByNewsCode', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(responseJson => {\n      return responseJson;\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  async insertNews(data) {\n    return fetch(GOBALS.URL + 'news/insertNews', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(responseJson => {\n      return responseJson;\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  async updateNewsByNewsCode(data) {\n    return fetch(GOBALS.URL + 'news/updateNewsByNewsCode', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(responseJson => {\n      return responseJson;\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  async deleteNewsByNewsCode(data) {\n    return fetch(GOBALS.URL + 'news/deleteNewsByNewsCode', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(responseJson => {\n      return responseJson;\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/s044/Documents/revel-market-backend/src/models/NewsModel.js"],"names":["GOBALS","ShopModel","constructor","getNewsBy","data","fetch","URL","method","headers","body","JSON","stringify","then","response","json","responseJson","catch","error","console","getNewsShowBy","getNewsByNewsCode","insertNews","updateNewsByNewsCode","deleteNewsByNewsCode"],"mappings":"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","sourcesContent":["import GOBALS from '../GOBALS';\r\nexport default class ShopModel {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    async getNewsBy(data) {\r\n        return fetch(GOBALS.URL + 'news/getNewsBy', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((response) => response.json())\r\n            .then((responseJson) => {\r\n                return responseJson;\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    async getNewsShowBy(data) {\r\n        return fetch(GOBALS.URL + 'news/getNewsShowBy', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((response) => response.json())\r\n            .then((responseJson) => {\r\n                return responseJson;\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    async getNewsByNewsCode(data) {\r\n        return fetch(GOBALS.URL + 'news/getNewsByNewsCode', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((response) => response.json())\r\n            .then((responseJson) => {\r\n                return responseJson;\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    async insertNews(data) {\r\n        return fetch(GOBALS.URL + 'news/insertNews', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((response) => response.json())\r\n            .then((responseJson) => {\r\n                return responseJson;\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    async updateNewsByNewsCode(data) {\r\n        return fetch(GOBALS.URL + 'news/updateNewsByNewsCode', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((response) => response.json())\r\n            .then((responseJson) => {\r\n                return responseJson;\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    async deleteNewsByNewsCode(data) {\r\n        return fetch(GOBALS.URL + 'news/deleteNewsByNewsCode', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((response) => response.json())\r\n            .then((responseJson) => {\r\n                return responseJson;\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}